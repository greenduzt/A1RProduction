<UserControl x:Class="A1QSystem.View.Production.Mixing.MixingScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
    d:DesignWidth="1050" d:DesignHeight="800">
    <UserControl.Resources>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" Margin="0,0,0,5" Padding="0,10,0,10" IsExpanded="True" Background="#FFECDDAD" Foreground="Black" FontWeight="Bold" Grid.Column="0" >
                            <Expander.Header>
                                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto">
                                    <TextBlock VerticalAlignment="Top" Width="530">
                                        <TextBlock TextAlignment="Center"  Width="530" FontFamily="Verdana" FontSize="26" TextWrapping="Wrap">
                                            <Run Text="{Binding Items[0].ShiftName}" />
                                            <Run Text="Shift" />                                           
                                        </TextBlock>                                       
                                    </TextBlock>
                                </StackPanel>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RowStyle" TargetType="DataGridRow">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="selectRowDetails"/>
            <Setter Property="Background" Value="{Binding RowBackgroundColour,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="Foreground" Value="#404040" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <!--<Setter Property="Padding" Value="20" />-->
            <Setter Property="FontWeight" Value="Bold" />
            <!--<Setter Property="MaxHeight" Value="100" />-->

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="homeMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="homeMouseLeve">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="WorkStationsMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WorkStationsTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WorkStationsTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="WorkStationsMouseLeve">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WorkStationsTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WorkStationsTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="homeMouseEnter" Storyboard="{StaticResource homeMouseEnter}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="homeMouseLeve" Storyboard="{StaticResource homeMouseLeve}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="WorkStationsTextBlock">
            <BeginStoryboard x:Name="WorkStationsMouseEnter" Storyboard="{StaticResource WorkStationsMouseEnter}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="WorkStationsTextBlock">
            <BeginStoryboard x:Name="WorkStationsMouseLeve" Storyboard="{StaticResource WorkStationsMouseLeve}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350*"/>
            <ColumnDefinition Width="350*"/>
            <ColumnDefinition Width="350*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding DailyDate}" Margin="0,80,0,0" VerticalAlignment="Top" TextAlignment="Center" FontFamily="Arial" FontSize="38" FontWeight="Bold" Height="53" Foreground="black"  Padding="0,1,0,0" Grid.ColumnSpan="3" />
        <TextBlock Background="#FF938F8F" Foreground="White" Margin="0,33,0,0" TextWrapping="Wrap" Text="" TextAlignment="Center" FontWeight="Bold" FontSize="30" FontFamily="Arial" Height="37" VerticalAlignment="Top" Grid.ColumnSpan="3"/>
        <TextBlock  Foreground="white" Margin="240,-82,240,0" TextWrapping="Wrap" Text="MIXING ORDERS" TextAlignment="Center" FontWeight="Bold" FontSize="60" FontFamily="Arial" Height="61" VerticalAlignment="Top" Grid.ColumnSpan="3"/>
        <Label Content="{Binding Version}" Padding="7,3,0,0" FontSize="10" FontWeight="Bold" Margin="0,0,-1,7" Foreground="White" Height="22" VerticalAlignment="Bottom" Grid.Column="0" Background="#FF6A6868" Grid.ColumnSpan="3" />
        <Grid Margin="0,70,1,0" HorizontalAlignment="Right" Width="346" Grid.Column="2" Height="31" VerticalAlignment="Top">
            <Label Content="" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="Black" Height="14" Margin="160,7,0,0" Background="#ffffff" VerticalAlignment="Top" Width="14"/>
            <Label Content="" HorizontalAlignment="Left" Height="14" Margin="5,7,0,0" Background="#d4383a" VerticalAlignment="Top" Width="14"/>
            <Label Content="Current Shift" HorizontalAlignment="Left" Height="26" FontSize="12" Margin="172,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="84" RenderTransformOrigin="0.505,0.481"/>
            <Label Content="Urgent" HorizontalAlignment="Left" Height="26" FontSize="12" Margin="16,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="49" RenderTransformOrigin="0.505,0.481"/>
            <Label Content="" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="Black" Height="14" Margin="261,7,0,0" Background="#e5bf43" VerticalAlignment="Top" Width="14"/>
            <Label Content="Next Shift" HorizontalAlignment="Left" Height="26" FontSize="12" Margin="274,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="69" RenderTransformOrigin="0.505,0.481"/>
            <Label Content="" HorizontalAlignment="Left" Height="14" Margin="65,7,0,0" Background="#0066ff" VerticalAlignment="Top" Width="14"/>
            <Label Content="Urgent Cold" HorizontalAlignment="Left" Height="26" FontSize="12" Margin="79,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="81" RenderTransformOrigin="0.505,0.481"/>
        </Grid>

        <!--COLUMN 1-->
        <DataGrid x:Name="dgData" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible"  HeadersVisibility="None"
                     VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding MixingProduction1}" Margin="1,138,1,29"  
                  RowStyle="{StaticResource RowStyle}" Visibility="{Binding AllGridVisibility}"  >
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,2,2,1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <!--<ColumnDefinition Width="8*"/>-->
                        </Grid.ColumnDefinitions>
                        <TextBlock  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Order No : {0}">
                                    <Binding Path="SalesOrderId" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Date : {0}">
                                    <Binding Path="RequiredDate" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Shift : {0}">
                                    <Binding Path="MixingShift" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsNotesVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Notes : {0}">
                                    <Binding Path="Comment" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Button Grid.Row="4" Grid.Column="0" Height="32"  ToolTip="Click to View Formula" FontSize="17" FontWeight="Bold" Command="{Binding ViewCommand}" Content="VIEW" Foreground="#FF575555" />
                        <Button Grid.Row="4"  Grid.Column="1" Height="32"  ToolTip="Click to Print Formula" FontSize="17" FontWeight="Bold" Command="{Binding PrintCommand}" Content="PRINT" Foreground="#FF575555" />
                        <!--<Button Grid.Row="4"  Grid.Column="2" Height="32"  ToolTip="Click this button if you have completed one block/log" FontSize="17" FontWeight="Bold" Command="{Binding CompletedCommand}" Content="COMPLETE" Foreground="#FF575555" >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Loaded" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation BeginTime="0:0:2" Duration="0:0:1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" From="#FFDDDDDD"  To="Red" AutoReverse="True" 
                                RepeatBehavior="{Binding RepeatAnimation}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>-->
                        <Button Grid.Row="4"  Grid.Column="2" Height="32"   ToolTip="Click to return this bin back to Grading" FontSize="17" FontWeight="Bold" 
                                Command="{Binding DataContext.ReturnCommandGrid1, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <!--RAW PRODUCT CODE-->
            <DataGrid.Columns>

                <!--DESCRIPTION-->
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!--QTY TO MAKE-->
                <DataGridTextColumn Header=" QTY&#x0a;Make" Binding="{Binding BlockLogQty}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--TYPE-->
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!--COLUMN 2-->
        <DataGrid x:Name="dgData2" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible"  HeadersVisibility="None"
                     VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding MixingProduction2}" Margin="1,138,1,29"  RowStyle="{StaticResource RowStyle}" 
                  Grid.Column="1" Visibility="{Binding AllGridVisibility}"  >
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,2,2,1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <!--<ColumnDefinition Width="8*"/>-->
                        </Grid.ColumnDefinitions>
                        <TextBlock  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Order No : {0}">
                                    <Binding Path="SalesOrderId" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Date : {0}">
                                    <Binding Path="RequiredDate" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Shift : {0}">
                                    <Binding Path="MixingShift" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsNotesVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Notes : {0}">
                                    <Binding Path="Comment" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Button Grid.Row="4" Grid.Column="0" Height="32"  ToolTip="Click to View Formula" FontSize="17" FontWeight="Bold" Command="{Binding ViewCommand}" Content="VIEW" Foreground="#FF575555" />
                        <Button Grid.Row="4"  Grid.Column="1" Height="32"  ToolTip="Click to Print Formula" FontSize="17" FontWeight="Bold" Command="{Binding PrintCommand}" Content="PRINT" Foreground="#FF575555" />
                        <!--<Button Grid.Row="4"  Grid.Column="2" Height="32"  ToolTip="Click this button if you have completed one block/log" FontSize="17" FontWeight="Bold" Command="{Binding CompletedCommand}" Content="COMPLETE" Foreground="#FF575555" >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Loaded" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation BeginTime="0:0:2" Duration="0:0:1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" From="#FFDDDDDD"  To="Red" AutoReverse="True" 
                                RepeatBehavior="{Binding RepeatAnimation}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>-->
                        <Button Grid.Row="4"  Grid.Column="2" Height="32"   ToolTip="Click to return this bin back to Grading" FontSize="17" FontWeight="Bold" 
                                Command="{Binding DataContext.ReturnCommandGrid2, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <!--RAW PRODUCT CODE-->
            <DataGrid.Columns>

                <!--DESCRIPTION-->
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!--QTY TO MAKE-->
                <DataGridTextColumn Header=" QTY&#x0a;Make" Binding="{Binding BlockLogQty}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--TYPE-->
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!--COLUMN 3-->
        <DataGrid x:Name="dgData3" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible" FontSize="12" HeadersVisibility="None"
         VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding MixingProduction3}" Margin="1,138,1,29" RowStyle="{StaticResource RowStyle}" 
         Grid.Column="2" Visibility="{Binding AllGridVisibility}">
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,2,2,1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <ColumnDefinition Width="25*" />
                            <!--<ColumnDefinition Width="8*"/>-->
                        </Grid.ColumnDefinitions>
                        <TextBlock  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Order No : {0}">
                                    <Binding Path="SalesOrderId" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Date : {0}">
                                    <Binding Path="RequiredDate" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Shift : {0}">
                                    <Binding Path="MixingShift" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontSize="15" TextWrapping="Wrap" Visibility="{Binding IsNotesVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Notes : {0}">
                                    <Binding Path="Comment" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Button Grid.Row="4" Grid.Column="0" Height="32"  ToolTip="Click to View Formula" FontSize="17" FontWeight="Bold" Command="{Binding ViewCommand}" Content="VIEW" Foreground="#FF575555" />
                        <Button Grid.Row="4"  Grid.Column="1" Height="32"  ToolTip="Click to Print Formula" FontSize="17" FontWeight="Bold" Command="{Binding PrintCommand}" Content="PRINT" Foreground="#FF575555" />
                        <!--<Button Grid.Row="4"  Grid.Column="2" Height="32"  ToolTip="Click this button if you have completed one block/log" FontSize="17" FontWeight="Bold" Command="{Binding CompletedCommand}" Content="COMPLETE" Foreground="#FF575555" >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Loaded" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation BeginTime="0:0:2" Duration="0:0:1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" From="#FFDDDDDD"  To="Red" AutoReverse="True" 
                                RepeatBehavior="{Binding RepeatAnimation}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>-->
                        <Button Grid.Row="4"  Grid.Column="3" Height="32"   ToolTip="Click to return this bin back to Grading" FontSize="17" FontWeight="Bold" 
                                Command="{Binding DataContext.ReturnCommandGrid3, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <!--RAW PRODUCT CODE-->
            <DataGrid.Columns>

                <!--DESCRIPTION-->
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!--QTY TO MAKE-->
                <DataGridTextColumn Header=" QTY&#x0a;Make" Binding="{Binding BlockLogQty}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--TYPE-->
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!--DAY 4-->
        <!--<DataGrid x:Name="dgData4" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible" FontSize="12" HeadersVisibility="None"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding MixingProduction4}" Margin="2,75,0,29" RowStyle="{StaticResource RowStyle}" Grid.Column="3">
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,5,5,10">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Row="0" Grid.Column="0" Height="28" ToolTip="Click to print Formula" FontSize="11" Command="{Binding PrintCommand}" Content="PRINT FORMULA" Foreground="#FF575555" />
                        <Button Grid.Row="0" Grid.Column="1" Height="28" ToolTip="Click this button if you have completed one block/log" FontSize="11" Command="{Binding CompletedCommand}"
                                        Content="COMPLETED" Foreground="#FF575555" />
                        <Button Grid.Row="1" Grid.Column="1" Height="16" Width="60" Margin="0,5,0,0" HorizontalAlignment="Right" ToolTip="Click to return this bin back to Grading" FontSize="9" Command="{Binding ReturnCommand}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            -->
        <!--RAW PRODUCT CODE-->
        <!--
            <DataGrid.Columns>
                -->
        <!--DESCRIPTION-->
        <!--
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                -->
        <!--QTY TO MAKE-->
        <!--
                <DataGridTextColumn Header=" QTY&#x0a;Make" Binding="{Binding BlockLogQty}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                -->
        <!--TYPE-->
        <!--
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>-->
        <!--DAY 5-->
        <!--<DataGrid x:Name="dgData5" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible" FontSize="12" HeadersVisibility="None"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding MixingProduction5}" Margin="2,75,0,29" RowStyle="{StaticResource RowStyle}" Grid.Column="4">
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,5,5,10">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Row="0" Grid.Column="0" Height="28" ToolTip="Click to print Formula" FontSize="11" Command="{Binding PrintCommand}" Content="PRINT FORMULA" Foreground="#FF575555" />
                        <Button Grid.Row="0" Grid.Column="1" Height="28" ToolTip="Click this button if you have completed one block/log" FontSize="11" Command="{Binding CompletedCommand}"
                                        Content="COMPLETED" Foreground="#FF575555" />
                        <Button Grid.Row="1" Grid.Column="1" Height="16" Width="60" Margin="0,5,0,0" HorizontalAlignment="Right" ToolTip="Click to return this bin back to Grading" FontSize="9" Command="{Binding ReturnCommand}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            -->
        <!--RAW PRODUCT CODE-->
        <!--
            <DataGrid.Columns>
                -->
        <!--DESCRIPTION-->
        <!--
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                -->
        <!--QTY TO MAKE-->
        <!--
                <DataGridTextColumn Header=" QTY&#x0a;Make" Binding="{Binding BlockLogQty}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                -->
        <!--TYPE-->
        <!--
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>-->

        <Grid Margin="8,7,8,0" Height="26" VerticalAlignment="Top" Grid.ColumnSpan="3">
            <TextBlock x:Name="HomeTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="80" FontSize="12" Text="DASHBOARD" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="0,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding NavHomeCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>

            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="91,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <TextBlock x:Name="NewQuoteTextBlock" Padding="1,1.5,0,1"  HorizontalAlignment="Left" Width="133" FontSize="13" Text="MIXING ORDERS" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="22" VerticalAlignment="Top" Background="#FFC33333" Foreground="White" FontWeight="Bold" Margin="250,1,0,0" />
            <TextBlock x:Name="WorkStationsTextBlock" Style="{StaticResource HoverEffect}" FontSize="12" Text="WORKSTATIONS" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="98" Margin="117,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding WorkStationsCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="228,1,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
        </Grid>
        <Button Content="Print Mixing Pending List" HorizontalAlignment="Left" Width="201" HorizontalContentAlignment="Left"  Margin="1,74,0,0" Command="{Binding PrintMixingPendingCommand}" 
        	ToolTip="Print mixing pending list" Height="27" VerticalAlignment="Top" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Change IBC" HorizontalContentAlignment="Left"  Margin="201,74,0,0" Command="{Binding IBCChangeCommand}" 
        	ToolTip="IBC change over" Height="27" VerticalAlignment="Top" HorizontalAlignment="Left" Width="111"  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Weekly Schedule" HorizontalAlignment="Left" Width="142" HorizontalContentAlignment="Left"  Margin="1,99,0,0" Command="{Binding ViewMixingScheduleCommand}" 
        	ToolTip="View weekly schedule" Height="27" VerticalAlignment="Top" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="DAILY" HorizontalAlignment="Right" Width="61" HorizontalContentAlignment="Left"  Margin="0,99,56,0" Command="{Binding DailyMixingOrdersCommand}" CommandParameter="daily"
        	ToolTip="Daily mixing orders" Height="35" VerticalAlignment="Top" Grid.Column="2" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="ALL" HorizontalAlignment="Right" Width="52" HorizontalContentAlignment="Left"  Margin="0,99,5,0" Command="{Binding AllMixingOrdersCommand}" CommandParameter="all"
        	ToolTip="All mixing orders" Height="35" VerticalAlignment="Top" Grid.Column="2" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <DataGrid x:Name="dgAllData" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Visible"  HeadersVisibility="None"
        	VirtualizingPanel.IsVirtualizingWhenGrouping="True" CanUserDeleteRows="False" ItemsSource="{Binding AllMixingProduction}" Margin="0,139,1,29"  RowStyle="{StaticResource RowStyle}" Visibility="{Binding DailyGridVisibility}" Grid.ColumnSpan="3"   >
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="5,2,2,1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition />
                            <ColumnDefinition  />
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <TextBlock  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontWeight="Bold" FontSize="20" TextWrapping="Wrap">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Order No : {0}">
                                    <Binding Path="SalesOrderId" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontWeight="Bold" FontSize="20" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Date : {0}">
                                    <Binding Path="RequiredDate" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontWeight="Bold" FontSize="20" TextWrapping="Wrap" Visibility="{Binding IsReqDateVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Mixing Shift : {0}">
                                    <Binding Path="MixingShift" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Padding="0,0,0,2" FontWeight="Bold" FontSize="20" TextWrapping="Wrap" Visibility="{Binding IsNotesVisible}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Notes : {0}">
                                    <Binding Path="Comment" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Button Grid.Row="0" Grid.Column="3" Height="40" Width=" 250" ToolTip="Click to View Formula" FontSize="20" FontWeight="Bold" Command="{Binding ViewCommand}" Content="VIEW" Foreground="#FF575555" Margin="2" HorizontalAlignment="Right" />
                        <Button Grid.Row="1"  Grid.Column="3" Height="40" Width=" 250" ToolTip="Click to Print Formula" FontSize="20" FontWeight="Bold" Command="{Binding PrintCommand}" Content="PRINT" Foreground="#FF575555" Margin="2" HorizontalAlignment="Right" />
                        <Button Grid.Row="2"  Grid.Column="3" Height="40" Width=" 250" ToolTip="Click this button if you have completed one block/log" FontSize="20" FontWeight="Bold" Command="{Binding CompletedCommand}" Content="COMPLETE" Foreground="#FF575555" Margin="2" HorizontalAlignment="Right" >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation BeginTime="0:0:2" Duration="0:0:1" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" From="#FFDDDDDD"  To="Red" AutoReverse="True" 
        										RepeatBehavior="{Binding RepeatAnimation}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Grid.Row="3"  Grid.Column="3" Height="40" Width=" 250"  ToolTip="Click to return this bin back to Grading" FontSize="20" FontWeight="Bold" 
                                Command="{Binding DataContext.ReturnCommandAll, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" Content="RETURN" Foreground="#FF575555" IsEnabled="{Binding IsReturnEnabled}" Margin="2" HorizontalAlignment="Right" />
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <!--RAW PRODUCT CODE-->
            <DataGrid.Columns>

                <!--DESCRIPTION-->
                <DataGridTextColumn Binding="{Binding RawProduct.Description}" Width="*"  FontSize="42">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="Description" Width="95" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!--<DataGridTextColumn Header=" QTY&#xA;Make" Binding="{Binding BlockLogQty}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
               
                <DataGridTextColumn Header="Type" Binding="{Binding RawProduct.RawProductType}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Padding" Value="0,10,0,10" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>-->
            </DataGrid.Columns>
        </DataGrid>
        <!--<Border x:Name="childWindow" Visibility="{Binding WindowVisibility}" Background="#88000000" Margin="0,-94,0,10" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="3" >
            <ContentControl Content="{Binding XmlContent}"  HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Border>-->
    </Grid>
</UserControl>
