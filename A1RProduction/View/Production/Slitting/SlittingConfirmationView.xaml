<UserControl x:Class="A1QSystem.View.Production.Slitting.SlittingConfirmationView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"    
             xmlns:Behaviors="clr-namespace:A1QSystem.Core"
             mc:Ignorable="d" MinHeight="300" Width="549.62" Height="438.618">
    <UserControl.Resources>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Margin="0,0,0,0" Background="Transparent"
                  BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="5">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" Margin="12,2,12,2"
                              RecognizesAccessKey="True">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="Red" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="LightGray" 
                            CornerRadius="2" 
                            Background="{TemplateBinding Background}">

                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Border.BorderBrush" Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="white">
        <Label Content="Total yield cut" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="122,113,0,0" Width="144" FontSize="16" FontWeight="Black" />
        <Label Content="Off-spec tiles" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="122,146,0,0" Width="130" FontSize="16" FontWeight="Black" />

        <TextBox Name="txtTotYieldCut" IsEnabled="{Binding TotYieldCutEnabled}" FontSize="16" Height="28" FontWeight="Black" TextWrapping="Wrap" Text="{Binding TotalYieldCutStr, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Right" Margin="271,115,0,0"  HorizontalAlignment="Left" Width="80"  >
            <i:Interaction.Behaviors>
                <Behaviors:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="false" />
            </i:Interaction.Behaviors>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown" >
                    <i:InvokeCommandAction Command="{Binding TotalYieldClicked}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <TextBox Name="txtOffSpecTiles" IsEnabled="{Binding OffSpecEnabled}" FontSize="16" Height="28" FontWeight="Black" TextWrapping="Wrap" Text="{Binding OffSpecTilesStr, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Right" Margin="271,149,0,0" HorizontalAlignment="Left" Width="80" >
            <i:Interaction.Behaviors>
                <Behaviors:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="false" />
            </i:Interaction.Behaviors>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown" >
                    <i:InvokeCommandAction Command="{Binding OffspecClicked}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Button Content="SUBMIT" IsEnabled="{Binding SubmitEnabled}" Command="{Binding SubmitCommand}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="63" Margin="0,0,79,10"/>
        <Button Content="CLOSE" Command="{Binding CloseCommand}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="63" Margin="0,0,11,10"/>
        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="SLITTING CONFIRMATION" TextAlignment="Center" FontWeight="Bold" FontSize="16" FontFamily="Arial" Height="24" VerticalAlignment="Top"/>
        <TextBlock Text="Note: Please make sure the quantities are correct before submition" FontSize="14" Height="26" TextAlignment="Center" Margin="0,39,0,0" VerticalAlignment="Top" FontWeight="Bold" Foreground="Red" />

        <Label Content="No of blocks slit" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="121,80,0,0" Width="153" FontSize="16" FontWeight="Black" />
        <ComboBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Margin="271,82,0,0"
                  FontSize="16" FontWeight="Black"
                  TabIndex="1"
                  IsEditable="False"
                  ItemsSource="{Binding MaxBlockCount, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                   SelectedItem="{Binding NoOfBlocksSlit}"
                 >

            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem" >
                    <Setter Property="HorizontalContentAlignment" Value="Right" />
                </Style>

            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Grid Margin="5,181,3,0" Visibility="{Binding OffSpeccReasonsVisiblity}" Height="223" VerticalAlignment="Top">
            <CheckBox Content="Contamination" HorizontalAlignment="Left" Height="19" Margin="338,42,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsContaminated}" FontSize="14" />
            <CheckBox Content="Lifted off board" HorizontalAlignment="Left" Height="19" Margin="37,40,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsLiftedOffBoard}" FontSize="14" />
            <CheckBox Content="Uneven thickness" HorizontalAlignment="Left" Height="19" Margin="37,64,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsUnevenThickness}" FontSize="14" />
            <CheckBox Content="Too thick" HorizontalAlignment="Left" Height="19" Margin="189,41,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsTooThick}" FontSize="14" />
            <CheckBox Content="Too thin" HorizontalAlignment="Left" Height="19" Margin="189,64,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsTooThin}" FontSize="14" />
            <CheckBox Content="Stone lines" HorizontalAlignment="Left" Height="19" Margin="37,88,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsStonelines}" FontSize="14" />
            <CheckBox Content="Damaged block/log" HorizontalAlignment="Left" Height="19" Margin="189,88,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsDamaged}" FontSize="14" />
            <CheckBox Content="Other" HorizontalAlignment="Left" Height="19" Margin="37,111,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsOther}" FontSize="14" />
            <Label Content="Tick reasons for adding Off-Spec" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32,4,0,0" Width="277" FontWeight="Black" FontSize="14" />
            <CheckBox Content="Operator Error" HorizontalAlignment="Left" Height="19" Margin="338,66,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsOperatorError}" FontSize="14" />
            <TextBox Visibility="{Binding TxtOtherVisibility}" Text="{Binding OtherText}" HorizontalAlignment="Left" Height="70" Margin="38,147,0,0" TextWrapping="Wrap" AcceptsReturn="True"  VerticalAlignment="Top" Width="496"/>
            <Label Visibility="{Binding TxtOtherVisibility}" Content="Enter reason" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="33,125,0,0" Width="277" FontWeight="Black" FontSize="10" />

        </Grid>
        <Button IsEnabled="{Binding TotYieldCutPrint}" ToolTip="Print total yield cut pallet slip" Command="{Binding PrintYieldCommand}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="36" Margin="354,0,0,295" Height="27" Style="{StaticResource ButtonStyle}">
            <Button.Background>
                <ImageBrush ImageSource="/A1QSystem;component/Images/print_red.png"/>
            </Button.Background>
        </Button>
        <!--<Grid Margin="{Binding ShreddedGridMargin}" Visibility="{Binding ShreddedReasonsVisiblity}" Height="85" VerticalAlignment="Top">
            <CheckBox Content="Contamination" HorizontalAlignment="Left" Height="19" Margin="338,32,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsContaminatedShredded}" />
            <CheckBox Content="Lifted off board" HorizontalAlignment="Left" Height="19" Margin="37,30,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsLiftedOffBoardShredded}" />
            <CheckBox Content="Uneven thickness" HorizontalAlignment="Left" Height="19" Margin="37,46,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsUnevenThicknessShredded}" />
            <CheckBox Content="Too thick" HorizontalAlignment="Left" Height="19" Margin="189,31,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsTooThickShredded}" />
            <CheckBox Content="Too thin" HorizontalAlignment="Left" Height="19" Margin="189,46,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsTooThinShredded}" />
            <CheckBox Content="Stone lines" HorizontalAlignment="Left" Height="19" Margin="37,62,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsStonelinesShredded}" />
            <CheckBox Content="Damaged block/log" HorizontalAlignment="Left" Height="19" Margin="189,62,0,0" VerticalAlignment="Top" Width="150" IsChecked="{Binding IsDamagedShredded}" />
            <CheckBox Content="Other" HorizontalAlignment="Left" Height="19" Margin="338,64,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsOtherShredded}" />
            <Label Content="Tick reasons for adding Shredding" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32,4,0,0" Width="277" FontSize="12" FontWeight="Black" />
            <CheckBox Content="Operator Error" HorizontalAlignment="Left" Height="19" Margin="338,48,0,0" VerticalAlignment="Top" Width="128" IsChecked="{Binding IsOperatorErrorShredded}" />

        </Grid>-->
        <!--<Label Content="Shredding" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding ShreddedLabelMargin}" Width="130" FontSize="16" FontWeight="Black" />-->
        <!--<TextBox Name="txtShreddedTiles" IsEnabled="{Binding ShreddedEnabled}" FontSize="16" Height="28" FontWeight="Black" TextWrapping="Wrap" Text="{Binding ShredTilesStr, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Right" Margin="{Binding ShreddedTextBoxMargin}" TextChanged="txtShreddedTiles_TextChanged" PreviewTextInput="txtShreddedTiles_PreviewTextInput" HorizontalAlignment="Left" Width="80">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown" >
                    <i:InvokeCommandAction Command="{Binding ShredTilesClicked}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>-->
        <Button IsEnabled="{Binding OffSpecPrint}" ToolTip="Print off-sepc tiles pallet slip" Command="{Binding PrintOffSpecCommand}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="36" Margin="354,0,0,262" Height="27"  Style="{StaticResource ButtonStyle}">
            <Button.Background>
                <ImageBrush ImageSource="/A1QSystem;component/Images/print_red.png"/>
            </Button.Background>
        </Button>
        <Grid Margin="383,58,0,0" Height="143" VerticalAlignment="Top" HorizontalAlignment="Left" Width="161">
            <Button Content="7" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,115,102" Command="{Binding DigitButtonPressCommand}" CommandParameter="7" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="8" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,80,102" Command="{Binding DigitButtonPressCommand}" CommandParameter="8" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="9" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,45,102" Command="{Binding DigitButtonPressCommand}" CommandParameter="9" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="4" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,115,68" Command="{Binding DigitButtonPressCommand}" CommandParameter="4" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="5" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,80,68" Command="{Binding DigitButtonPressCommand}" CommandParameter="5" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="6" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,45,68" Command="{Binding DigitButtonPressCommand}" CommandParameter="6" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="1" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,115,34" Command="{Binding DigitButtonPressCommand}" CommandParameter="1" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="2" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,80,34" Command="{Binding DigitButtonPressCommand}" CommandParameter="2" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="3" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,45,34" Command="{Binding DigitButtonPressCommand}" CommandParameter="3" Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="0" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,80,0" Command="{Binding DigitButtonPressCommand}" CommandParameter="0" Height="35" Width="71" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!--<Button Content="." HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Margin="0,0,45,0" Command="{Binding DigitButtonPressCommand}" CommandParameter="." Height="35" Width="35" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>-->
            <Button Content="DEL" HorizontalAlignment="Right"  HorizontalContentAlignment="Left" Command="{Binding DigitButtonPressCommand}" CommandParameter="Del" Height="35" Width="44" VerticalAlignment="Bottom" ToolTip="Delete" Margin="0,0,36,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#4B5555"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#808080"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>
    </Grid>
</UserControl>
