<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Core="clr-namespace:A1QSystem.Core" x:Class="A1QSystem.View.WorkOrders.RepairDescriptionsView" 
             mc:Ignorable="d" 
              d:DesignHeight="600" MinHeight="600" d:DesignWidth="900" MaxWidth="900" MinWidth="900">
    <Grid Background="White">

        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="Repair Descriptions" TextAlignment="Center" FontWeight="Bold" FontSize="14" FontFamily="Verdana" Height="26" VerticalAlignment="Top" />
        <Label Content="Vehicle ID" HorizontalAlignment="Left" Height="30" Margin="10,42,0,0" VerticalAlignment="Top" Width="112"/>
        <TextBox HorizontalAlignment="Left" Height="26" Margin="144,44,0,0" TextWrapping="Wrap" Text="{Binding VehicleWorkOrder.Vehicle.ID}" VerticalAlignment="Top" Width="74" Padding="0,3,0,0" IsReadOnly="True" TextAlignment="Right" />
        <TextBox HorizontalAlignment="Left" Height="26" Margin="341,44,0,0" TextWrapping="Wrap" Text="{Binding VehicleWorkOrder.Vehicle.SerialNumber}" VerticalAlignment="Top" Width="155" Padding="0,3,0,0" IsReadOnly="True" />
        <Label Content="Serial Number" HorizontalAlignment="Left" Height="30" Margin="251,43,0,0" VerticalAlignment="Top" Width="90"/>
        <Label Content="Description" HorizontalAlignment="Left" Height="30" Margin="510,43,0,0" VerticalAlignment="Top" Width="70"/>
        <TextBox Height="26" Margin="580,44,10,0" TextWrapping="Wrap" Text="{Binding VehicleWorkOrder.Vehicle.VehicleDescription}" VerticalAlignment="Top" Padding="0,3,0,0" IsReadOnly="True" />
        <Border BorderBrush="#FFC5D0EE" Margin="5,92,5,34"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" >
            <TreeView x:Name="workItemsTree"  Margin="1,1,1,1" ItemsSource="{Binding VehicleWorkDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0">
                <!--<TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove"/>
                    </ContextMenu>
                </TreeView.ContextMenu>-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True" />
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="14" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding VehicleRepairDescription}">
                        <!--Teams-->
                        <StackPanel Orientation="Horizontal" Visibility="{Binding VehicleMaintenanceInfo.WorkItemVisible}">
                            <TextBlock Text="{Binding VehicleMaintenanceInfo.Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text=" - " />
                            <TextBlock Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <!--Repair Items-->
                        <HierarchicalDataTemplate.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Vehicleparts}">
                                <StackPanel>
                                    <TextBlock Visibility="{Binding RepairVisiblity}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat=" {0} - {1}">
                                                <Binding Path="StrSequenceNumber"/>
                                                <Binding Path="RepairDescription"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
        								<!--<TextBlock.ContextMenu>
                                            <ContextMenu>
                                                --><!--<MenuItem Header ="Remove repair item" 
                                                          Command="{Binding DataContext.RemoveRepairItemCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}" />--><!--
                                                <MenuItem Header ="Remove repair item" Click="MenuItem_Del" Background="Aqua" />

                                            </ContextMenu>
                                        </TextBlock.ContextMenu>-->
                                    </TextBlock>
                                    <!--<TextBlock Text="Remove">
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header ="Add SubNode" />
                                                <MenuItem Header ="Remove Node" />
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>-->
                                </StackPanel>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat=" {0} - {1}">
                                                    <Binding Path="StrSequenceNumber"/>
                                                    <Binding Path="PartCode"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Border>
        <Button Content="CLOSE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left" Command="{Binding CloseCommand}" 
        	ToolTip="Close form" Height="25" VerticalAlignment="Bottom" Margin="0,0,4,4" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="PRINT" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="73" Height="25" HorizontalContentAlignment="Left" Margin="0,0,77,4" Command="{Binding PrintCommand}"  ToolTip="Print descriptions" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
