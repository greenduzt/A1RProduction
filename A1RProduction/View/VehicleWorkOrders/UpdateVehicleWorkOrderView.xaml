<UserControl x:Class="A1QSystem.View.VehicleWorkOrders.UpdateVehicleWorkOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:local="clr-namespace:A1QSystem.Core"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="900" MaxWidth="900">
    <UserControl.Resources>
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White" />
            <!--<Setter Property="IsEnabled" Value="{Binding IsProcessing}" />-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D1D1D1"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <collections:ArrayList x:Key="arrList">
            <collections:DictionaryEntry Key="Yes" Value="True" />
            <collections:DictionaryEntry Key="No" Value="False" />
        </collections:ArrayList>
    </UserControl.Resources>
    <Grid Background="White">
        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="Update Vehicle Work Order" TextAlignment="Center" FontWeight="Bold" FontSize="14" FontFamily="Verdana" Height="26" VerticalAlignment="Top" />
        <Border BorderBrush="#FFC5D0EE" Margin="10,41,10,0"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Height="210" VerticalAlignment="Top" Background="White" >
            <Grid Margin="-2,3,-2,-2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="87*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Next Service Date"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="24" FontWeight="SemiBold" HorizontalAlignment="Left" Width="161" FontFamily="Arial" Margin="7,173,0,0" />
                <DatePicker HorizontalAlignment="Left"                  DisplayDateStart="{Binding CurrentDate}" 
        			SelectedDate="{Binding SelectedDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        			Margin="187,173,0,0" 
        			VerticalAlignment="Top" 
        			TabIndex="7"
        			Width="102" Height="24" />
                <Grid Margin="5,145,0,10">

                    <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Maintenance Frequency" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="2,2,0,0" />
                    <RadioButton Content="6 months" x:Name="rdbSInspection1_Copy" GroupName="DateRepeat" IsChecked="{Binding SixMonthChecked}" Height="15" Margin="294,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding SixMonthsEnabled}"  />
                    <RadioButton Content="2 years" x:Name="rdbSInspection1_Copy1" GroupName="DateRepeat" IsChecked="{Binding TwoYearsChecked}" Height="15" Margin="515,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding TwoYearsEnabled}" Visibility="{Binding RadioVisibility}" />
                    <RadioButton Content="1 year" x:Name="rdbSInspection1_Copy4" GroupName="DateRepeat" IsChecked="{Binding OneYearChecked}" Height="15" Margin="409,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding OneYearEnabled}" Visibility="{Binding RadioVisibility}" />
                    <RadioButton Content="1 month" x:Name="rdbSInspection1_Copy7" GroupName="DateRepeat" IsChecked="{Binding OneMonthChecked}" Height="15" VerticalAlignment="Top" HorizontalAlignment="Left" Width="83" Margin="182,6,0,0" IsEnabled="{Binding OneMonthEnabled}" />
                    <RadioButton Content="{Binding UpdateContent}" x:Name="rdbSInspection1_Copy2" GroupName="DateRepeat" IsChecked="{Binding UpdatedChecked}" Height="47" Margin="630,6,0,-24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="235" IsEnabled="{Binding SixMonthsEnabled}" />

                </Grid>

                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Vehicle Type" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="7,41,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding VehicleWorkOrder.Vehicle.VehicleCategory.VehicleType}" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="12" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="386" Margin="187,41,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Serial Number" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="7,67,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding VehicleWorkOrder.Vehicle.SerialNumber}" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="12" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="386" Margin="187,67,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Vehicle Brand" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="7,119,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding VehicleWorkOrder.Vehicle.VehicleBrand}" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="12" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="386" Margin="187,119,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Vehicle Description" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="7,93,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding VehicleWorkOrder.Vehicle.VehicleDescription }" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="12" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="386" Margin="187,93,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Work Order Type" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="7,14,0,0" />
                <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding VehicleWorkOrder.WorkOrderType}" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="12" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="386" Margin="187,14,0,0" />


            </Grid>
        </Border>
        <Border BorderBrush="#FFC5D0EE" Margin="10,256,10,41"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" >
            <TreeView x:Name="workItemsTree"  Margin="1,1,1,1" ItemsSource="{Binding VehicleWorkDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0">
                <!--<TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove"/>
                    </ContextMenu>
                </TreeView.ContextMenu>-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True" />
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="14" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding VehicleRepairDescription}">
                        <!--Teams-->
                        <StackPanel Orientation="Horizontal" Visibility="{Binding VehicleMaintenanceInfo.WorkItemVisible}">
                            <TextBlock Text="{Binding VehicleMaintenanceInfo.Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text=" - " />
                            <TextBlock Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <!--Repair Items-->
                        <HierarchicalDataTemplate.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Vehicleparts}">
                                <StackPanel>
                                    <TextBlock Visibility="{Binding RepairVisiblity}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat=" {0} - {1}">
                                                <Binding Path="StrSequenceNumber"/>
                                                <Binding Path="RepairDescription"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
        								<!--<TextBlock.ContextMenu>
                                            <ContextMenu>
                                                --><!--<MenuItem Header ="Remove repair item" 
                                                          Command="{Binding DataContext.RemoveRepairItemCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}" />--><!--
                                                <MenuItem Header ="Remove repair item" Click="MenuItem_Del" Background="Aqua" />

                                            </ContextMenu>
                                        </TextBlock.ContextMenu>-->
                                    </TextBlock>
                                    <!--<TextBlock Text="Remove">
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header ="Add SubNode" />
                                                <MenuItem Header ="Remove Node" />
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>-->
                                </StackPanel>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat=" {0} - {1}">
                                                    <Binding Path="StrSequenceNumber"/>
                                                    <Binding Path="PartCode"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <!--<DataGrid x:Name="dgQuoteDetails"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" 
        		ItemsSource="{Binding VehicleWorkDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        		AutoGenerateColumns="False" Grid.Column="0" Margin="2,2,2,2" Grid.ColumnSpan="2" Background="#e1e9f7" CanUserAddRows="False"   TabIndex="14"  >

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
                    <local:BindingProxy x:Key="proxy" Data="{Binding}"/>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <StaticResource ResourceKey="RowStyle"/>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    -->
            <!--Code-->
            <!--
                    <DataGridTextColumn Header="Code" Binding="{Binding VehicleMaintenanceInfo.Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="IsEnabled" Value="False" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    -->
            <!--Description-->
            <!--
                    <DataGridTextColumn Header="Work Description" Binding="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    -->
            <!--Parts Orded-->
            <!--
                    <DataGridTemplateColumn Header="Parts Orded" Visibility="{Binding Data.PartsOrdedVisibility, Source={StaticResource proxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <CheckBox IsChecked="{Binding PartsOrdered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5" FontSize="12" Margin="0,6,0,0" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                        <TextBlock Text="Yes" Margin="0,-4,0,0" />
                                    </CheckBox>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
            <!--Active-->
            <!--
                    <DataGridComboBoxColumn Header="Active" Width="Auto" SelectedValueBinding="{Binding IsActive}" DisplayMemberPath="Key"  SelectedValuePath="Value" ItemsSource="{StaticResource arrList}">
                        <DataGridComboBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridComboBoxColumn.HeaderStyle>
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                    </DataGridComboBoxColumn>
                    -->
            <!--<DataGridTextColumn Header="Active" Binding="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>-->
            <!--
                </DataGrid.Columns>
            </DataGrid>-->
        </Border>
        <!--<Grid Margin="0,0,10,10" HorizontalAlignment="Right" Width="202" Height="20" VerticalAlignment="Bottom">
            <Button Content="UPDATE"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="65" Command="{Binding UpdateWorkOrderCommand}" Margin="69,0,0,0" />
            <Button Content="CLOSE" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="64" Margin="138,0,0,0" Command="{Binding CloseCommand}" />
            <Button Content="DELETE" HorizontalAlignment="Left" VerticalAlignment="Top" Width="63" Command="{Binding DeleteCommand}" />
        </Grid>-->
        <Button Content="CLOSE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,10,10" Command="{Binding CloseCommand}" 
        	ToolTip="Close form" Height="25" VerticalAlignment="Bottom" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="UPDATE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,83,10" Command="{Binding UpdateWorkOrderCommand}" 
        	ToolTip="Update form" Height="25" VerticalAlignment="Bottom" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="DELETE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,156,10" Command="{Binding DeleteCommand}" 
        	ToolTip="Delete order" Height="25" VerticalAlignment="Bottom" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
