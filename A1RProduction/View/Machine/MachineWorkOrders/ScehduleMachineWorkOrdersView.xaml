<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:A1QSystem.Core" x:Class="A1QSystem.View.Machine.MachineWorkOrders.ScehduleMachineWorkOrdersView" 
             mc:Ignorable="d" 
             d:DesignWidth="1050" d:DesignHeight="800">

    <UserControl.Resources>
        <Storyboard x:Key="HomeMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HomeMouseLeave">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AdminDashboardMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AdminDashboardTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AdminDashboardTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AdminDashboardMouseLeave">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AdminDashboardTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AdminDashboardTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>


        <Storyboard x:Key="MaintenanceMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MaintenanceTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MaintenanceTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MaintenanceMouseLeave">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MaintenanceTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MaintenanceTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="MachinesMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MachinesTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MachinesTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MachinesMouseLeave">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MachinesTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MachinesTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D1D1D1"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Core:IgnoreNewItemPlaceHolderConverter x:Key="ignoreNewItemPlaceHolderConverter"/>

    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="HomeMouseEnter" Storyboard="{StaticResource HomeMouseEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="HomeMouseLeave" Storyboard="{StaticResource HomeMouseLeave}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="AdminDashboardTextBlock">
            <BeginStoryboard x:Name="AdminDashboardMouseEnter" Storyboard="{StaticResource AdminDashboardMouseEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="AdminDashboardTextBlock">
            <BeginStoryboard x:Name="AdminDashboardMouseLeave" Storyboard="{StaticResource AdminDashboardMouseLeave}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="MaintenanceTextBlock">
            <BeginStoryboard x:Name="MaintenanceMouseEnter" Storyboard="{StaticResource MaintenanceMouseEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="MaintenanceTextBlock">
            <BeginStoryboard x:Name="MaintenanceMouseLeave" Storyboard="{StaticResource MaintenanceMouseLeave}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="MachinesTextBlock">
            <BeginStoryboard x:Name="MachinesMouseEnter" Storyboard="{StaticResource MachinesMouseEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="MachinesTextBlock">
            <BeginStoryboard x:Name="MachinesMouseLeave" Storyboard="{StaticResource MachinesMouseLeave}"/>
        </EventTrigger>

    </UserControl.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="16*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <Label Content="{Binding Version}" Padding="7,3,0,0" FontSize="10" FontWeight="Bold" Margin="0,0,0,7" Foreground="White" Height="22" VerticalAlignment="Bottom" Grid.Column="0" Background="#FF6A6868" Grid.ColumnSpan="3" />
        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,37,0,0" TextWrapping="Wrap" Text="Schedule Machine Work Orders" TextAlignment="Center" FontWeight="Bold" FontSize="20" FontFamily="Arial" Height="32" VerticalAlignment="Top" Grid.ColumnSpan="3"/>
        <Grid Margin="8,7,8,0" Height="26" VerticalAlignment="Top" Grid.ColumnSpan="3">
            <TextBlock x:Name="HomeTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="83" FontSize="12" Text="DASHBOARD" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="0,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding NavHomeCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>

            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="408,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="93,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <TextBlock x:Name="AdminDashboardTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="130" FontSize="12" Text="ADMIN DASHBOARD" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="123,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding AdminDashboardCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="268,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <TextBlock x:Name="MaintenanceTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="100" FontSize="12" Text="MAINTENANCE" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="296,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding MaintenanceCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="518,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <TextBlock x:Name="NewQuoteTextBlock_Copy" Padding="1,1.5,0,1"  HorizontalAlignment="Left" Width="232" FontSize="13" Text="SCHEDULE MACHINE WORK ORDERS" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="22" VerticalAlignment="Top" Background="#FFC33333" Foreground="White" FontWeight="Bold" Margin="539,0,0,0" />
            <TextBlock x:Name="MachinesTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="69" FontSize="12" Text="MACHINES" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="435,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding MachinesCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>
        <Border BorderBrush="#FFC5D0EE"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Background="#e1e9f7" Margin="0,86,0,46" Grid.Column="1" />
        <DatePicker HorizontalAlignment="Left"                  DisplayDateStart="{Binding CurrentDate}" 
        	SelectedDate="{Binding SelectedDate}"
        	Margin="183,215,0,0" 
        	VerticalAlignment="Top" 
        	TabIndex="1"
                    IsEnabled="{Binding IsMachineEnabled}"
        	Width="100" Height="24" Grid.Column="1" />
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Service Start Date"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="24" FontWeight="SemiBold" FontFamily="Arial" Margin="10,215,0,0" HorizontalAlignment="Left" Width="140" Grid.Column="1" />
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Location"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="24" FontWeight="SemiBold" HorizontalAlignment="Left" Width="84" FontFamily="Arial" Margin="11,94,0,0" Grid.Column="1" />
        <ComboBox x:Name="cmbCustomers_Copy1" 
        	TabIndex="2"  
        	IsEditable="False"      
        	ItemsSource="{Binding StockLocation, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
        	DisplayMemberPath="StockName"  
        	SelectedValuePath="ID"     
        	SelectedValue="{Binding SelectedLocationID, UpdateSourceTrigger=PropertyChanged}"      
        	Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,94,0,0" Height="22" VerticalAlignment="Top" HorizontalAlignment="Left" Width="102" Grid.Column="1" />
        <!--<DataGrid x:Name="dgQuoteDetails"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" ItemsSource="{Binding Machines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        	AutoGenerateColumns="False" Margin="132,301,11,99" Background="#e1e9f7" CanUserAddRows="False"   TabIndex="14" Grid.Column="1" >

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <StaticResource ResourceKey="RowStyle"/>
            </DataGrid.RowStyle>

            <DataGrid.Columns>

                -->
        <!--ID-->
        <!--
                <DataGridTextColumn Header="ID" Binding="{Binding MachineID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="60" IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                -->
        <!--Code-->
        <!--

                <DataGridTextColumn Header="Name" Binding="{Binding MachineName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>


                -->
        <!--Description-->
        <!--

                <DataGridTextColumn Header="Description" Binding="{Binding MachineDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                -->
        <!--Check-->
        <!--

                <DataGridTemplateColumn Width="Auto" Header="Tick">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5" FontSize="12" Margin="0,6,0,0" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>-->
        <!--<CheckBox Content="Tick All" TabIndex="12" IsChecked="{Binding TickAll}" IsEnabled="{Binding CheckEnabled}" Height="18" VerticalAlignment="Top" Margin="0,281,11,0" HorizontalAlignment="Right" Width="59" Grid.Column="1"/>-->
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Frequency"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="24" FontWeight="SemiBold" FontFamily="Arial" Margin="11,186,0,0" HorizontalAlignment="Left" Width="118" Grid.Column="1" />

        <Button Content="ADD ITEM" HorizontalAlignment="Right" VerticalAlignment="Top" Width="85" Height="24" HorizontalContentAlignment="Left" Margin="0,308,0,0" Command="{Binding AddItemCommand}" ToolTip="Add new maintenance description" IsEnabled="{Binding AddItemEnabled}" Grid.Column="1">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding AddItemBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#808080"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--
        <CheckBox Content="Weekly" TabIndex="4" x:Name="rdbSInspection1_Copy2"  IsChecked="{Binding WeeklyChecked}" Height="15" Margin="193,175,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="59" IsEnabled="{Binding CheckEnabled}" Grid.Column="1" />
        <CheckBox Content="6 months" TabIndex="7" x:Name="rdbSInspection1_Copy" IsChecked="{Binding SixMonthChecked}" Height="15" Margin="339,175,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" Grid.Column="1" IsEnabled="{Binding CheckEnabled}" />
        <CheckBox Content="Daily" TabIndex="3" x:Name="rdbSInspection1_Copy1"  IsChecked="{Binding DailyChecked}" Height="15" Margin="132,175,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="59" IsEnabled="{Binding CheckEnabled}" Grid.Column="1" />
        <CheckBox Content="1 year" TabIndex="8" x:Name="rdbSInspection1_Copy4"  IsChecked="{Binding OneYearChecked}" Height="15" Margin="420,175,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="62" IsEnabled="{Binding CheckEnabled}" Grid.Column="1" />
        <CheckBox Content="1 month" TabIndex="5" x:Name="rdbSInspection1_Copy7" IsChecked="{Binding OneMonthChecked}" Height="15" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71" Margin="263,175,0,0" Grid.Column="1" IsEnabled="{Binding CheckEnabled}" />-->
        <Button Content="CREATE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,6,60" Command="{Binding CreateWorkOrderCommand}" 
        	ToolTip="Crate order" Height="25" VerticalAlignment="Bottom" Grid.Column="1" IsEnabled="{Binding SubmitEnabled}" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding SubmitBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="CLEAR" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,83,60" Command="{Binding ClearCommand}" 
        	ToolTip="Clear data" Height="25" VerticalAlignment="Bottom" Grid.Column="1" IsEnabled="{Binding ClearEnabled}" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding ClearBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!--<Button HorizontalAlignment="Left" Width="139" HorizontalContentAlignment="Left"  Margin="397,195,0,0" Command="{Binding ViewMaintenanceCommand}" 
        	ToolTip="View/Update vehicle maintenance descriptions" Height="47" VerticalAlignment="Top" Grid.Column="1" IsEnabled="{Binding MainDisEnabled}" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding MainDesBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <TextBlock><Run Text="VIEW MAINTENANCE"/><LineBreak/><Run Text="    DESCRIPTIONS"/></TextBlock>
        </Button>-->
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Order Type"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="24" FontWeight="SemiBold" FontFamily="Arial" Margin="11,154,0,0" HorizontalAlignment="Left" Width="119" Grid.Column="1" />
        <ComboBox 
    		x:Name="cmbDispatchTime_Copy1"
    		TabIndex="9"  
    		IsEditable="False"   
    		SelectedValuePath="Content"
            IsEnabled="{Binding OrderTypeEnabled}"
            Padding="6,4,0,0"
    		Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,153,0,0" HorizontalAlignment="Left" Width="100" Height="25" 
            VerticalAlignment="Top" SelectedValue="{Binding SelectedOrderType}" Grid.Column="1" >
            <ComboBoxItem Content="Select"/>
            <ComboBoxItem Content="Internal"/>
            <ComboBoxItem Content="External" />
        </ComboBox>
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Provider"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" 
                   Height="24" FontWeight="SemiBold" FontFamily="Arial" Margin="11,247,0,0" Visibility="{Binding ProviderVisibility}"
                   HorizontalAlignment="Left" Width="119" Grid.Column="1" />
        <ComboBox 
            x:Name="cmdProvider"
            TabIndex="10"  
            IsEditable="False" 
            ItemsSource="{Binding Providers, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
            DisplayMemberPath="ProviderName"  
        	SelectedValuePath="ProviderID"    
            Padding="6,4,0,0"
        	SelectedValue="{Binding SelectedProviderID, UpdateSourceTrigger=PropertyChanged}"      
            Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,245,0,0" HorizontalAlignment="Left" Width="365" Height="25" 
            VerticalAlignment="Top"  Grid.Column="1" Visibility="{Binding ProviderVisibility}"  />
        <ComboBox 
    		x:Name="cmbDays"
    		TabIndex="9"  
    		IsEditable="False"   
    		SelectedValuePath="Content"
            Padding="4,4,0,0"
            IsEnabled="{Binding OrderTypeEnabled}"
            Visibility="{Binding ProviderVisibility}"
    		Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,276,0,0" HorizontalAlignment="Left" Width="56" Height="25" 
            VerticalAlignment="Top" SelectedValue="{Binding SelectedDays}" Grid.Column="1" HorizontalContentAlignment="Right" >
            <ComboBoxItem Content="Select"/>
            <ComboBoxItem Content="1"/>
            <ComboBoxItem Content="2" />
            <ComboBoxItem Content="3"/>
            <ComboBoxItem Content="4" />
            <ComboBoxItem Content="5"/>
            <ComboBoxItem Content="6" />
            <ComboBoxItem Content="7"/>
            <ComboBoxItem Content="8" />
            <ComboBoxItem Content="9"/>
            <ComboBoxItem Content="10" />
            <ComboBoxItem Content="11"/>
            <ComboBoxItem Content="12" />
            <ComboBoxItem Content="13"/>
            <ComboBoxItem Content="14" />
            <ComboBoxItem Content="15"/>
            <ComboBoxItem Content="16" />
            <ComboBoxItem Content="17"/>
            <ComboBoxItem Content="18" />
            <ComboBoxItem Content="19"/>
            <ComboBoxItem Content="20" />
            <ComboBoxItem Content="21"/>
            <ComboBoxItem Content="22" />
            <ComboBoxItem Content="23" />
            <ComboBoxItem Content="24" />
            <ComboBoxItem Content="25" />
            <ComboBoxItem Content="26" />
            <ComboBoxItem Content="27" />
            <ComboBoxItem Content="28" />
            <ComboBoxItem Content="29" />
            <ComboBoxItem Content="30" />
            <ComboBoxItem Content="31" />
        </ComboBox>
        <TextBlock VerticalAlignment="Top" Visibility="{Binding ProviderVisibility}" Padding="0,2,0,0" Text="Order to show on screen before service date"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="49" FontWeight="SemiBold" FontFamily="Arial" Margin="11,271,0,0" HorizontalAlignment="Left" Width="167" Grid.Column="1" />
        <TextBlock Padding="0,2,0,0" Text="Select Machine"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" 
                   FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" Width="114" FontFamily="Arial" Margin="10,126,0,0" Height="22" VerticalAlignment="Top" Grid.Column="1"  />
        <ComboBox x:Name="cmbCustomers_Copy" 
            TabIndex="2"  
            IsEditable="False"      
            IsEnabled="{Binding IsMachineEnabled}"
            ItemsSource="{Binding Machines, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
            DisplayMemberPath="MachineName"  
            SelectedValuePath="MachineID"     
            SelectedValue="{Binding SelectedMachineID, UpdateSourceTrigger=PropertyChanged}"      
            Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,122,0,0" 
                  Padding="5,4,0,0"
                  HorizontalAlignment="Left" Width="233" Grid.Column="1" Height="25" VerticalAlignment="Top" />

        <Border BorderBrush="#FFC5D0EE" Margin="0,332,0,90"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Column="1" >

            <DataGrid x:Name="dgQuoteDetails"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana"
                ItemsSource="{Binding MachineMaintenanceInfoList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                AutoGenerateColumns="False" Grid.Column="0" Margin="2,2,2,2" Grid.ColumnSpan="2" Background="#e1e9f7" CanUserAddRows="False"   TabIndex="14"  >

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
                    <Core:BindingProxy x:Key="proxy" Data="{Binding}"/>
                </DataGrid.Resources>

                <!--<DataGrid.SelectedItem>
                    <Binding Converter="{StaticResource ignoreNewItemPlaceHolderConverter}" Path="SelectedItem"/>
                </DataGrid.SelectedItem>-->

                <DataGrid.RowStyle>
                    <StaticResource ResourceKey="RowStyle"/>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <!--<DataGridTextColumn Header="Active" Binding="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>-->
                    <!--<DataGridCheckBoxColumn Width="auto" Header="Mon" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Tue" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Wed" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Thus" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Fri" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />-->
                    <!--Code-->
                    <DataGridTextColumn Header="Code" Binding="{Binding SequenceStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" IsReadOnly="True">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="IsEnabled" Value="False" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--Description-->
                    <DataGridTextColumn Header="Work Description" Binding="{Binding MachineDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--Repetition-->
                    <DataGridTemplateColumn Width="Auto" Visibility="{Binding Data.RepetitionVisiblity, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition  />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Row="0" Grid.ColumnSpan="5" FontSize="14" FontWeight="Bold" Background="Transparent" HorizontalContentAlignment="Center" BorderBrush="Black" BorderThickness="0,0,0,1" Padding="0,0,0,3" Text="Repetition"/>

                                    <TextBox Grid.Row="1" Grid.Column="0" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center" Text="Mon"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center" Text="Tue"/>
                                    <TextBox Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center" Text="Wed"/>
                                    <TextBox Grid.Row="1" Grid.Column="3" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center" Text="Thus"/>
                                    <TextBox Grid.Row="1" Grid.Column="4" BorderBrush="Black" BorderThickness="0,0,0,0" Width="35" TextAlignment="Center" Text="Fri"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox  Grid.Column="0" Margin="13,5,0,0" IsChecked="{Binding MonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="1" Margin="13,5,0,0" IsChecked="{Binding TueChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="2" Margin="11,5,0,0" IsChecked="{Binding WedChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="3" Margin="10,5,0,0" IsChecked="{Binding ThusChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="4" Margin="8,5,0,0" IsChecked="{Binding FriChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>
                    <!-- REMOVE -->
                    <DataGridTemplateColumn Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Button Margin="3" ToolTip="Remove item" Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"  CommandParameter="{Binding}"  >
                                        <Image Source="/Images/remove.png" Width="15" Height="15" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <Button Content="UPDATE" HorizontalAlignment="Right" VerticalAlignment="Top" Width="85" Height="24" HorizontalContentAlignment="Left" Margin="0,308,90,0" 
                Command="{Binding UpdateCommand}" ToolTip="Update work description" IsEnabled="{Binding AddItemEnabled}" Grid.Column="1">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding AddItemBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#808080"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <ComboBox 
            x:Name="cmbFrequency"
            TabIndex="9"  
            IsEditable="False"   
            SelectedValuePath="Content"
            Padding="6,4,0,0"
            IsEnabled="{Binding IsMachineEnabled}"
            Background="White" Foreground="Black" FontFamily="Verdana" Margin="183,184,0,0" HorizontalAlignment="Left" Width="100" Height="25" 
            VerticalAlignment="Top" SelectedValue="{Binding SelectedFrequency}" Grid.Column="1" HorizontalContentAlignment="Left" >
            <ComboBoxItem Content="Select"/>
            <ComboBoxItem Content="Daily"/>
            <ComboBoxItem Content="Weekly" />
            <ComboBoxItem Content="Fortnightly"/>
            <ComboBoxItem Content="1 Month" />
            <ComboBoxItem Content="2 Months" />
            <ComboBoxItem Content="3 Months"/>
            <ComboBoxItem Content="4 Months"/>
            <ComboBoxItem Content="5 Months"/>
            <ComboBoxItem Content="6 Months" />
            <ComboBoxItem Content="1 Year"/>
            <ComboBoxItem Content="2 Years"/>
            <ComboBoxItem Content="3 Years"/>
            <ComboBoxItem Content="4 Years"/>
            <ComboBoxItem Content="5 Years"/>
            <ComboBoxItem Content="10 Years" />
        </ComboBox>
        <TextBlock VerticalAlignment="Top" Visibility="{Binding ProviderVisibility}" Padding="0,2,0,0" Text="days"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="25" FontWeight="SemiBold" FontFamily="Arial" Margin="242,279,0,0" HorizontalAlignment="Left" Width="72" Grid.Column="1" />
        <!--<Border x:Name="childWindow" Visibility="{Binding WindowVisibility}" Background="#88000000" RenderTransformOrigin="0.5,0.5" Margin="0,-58,0,7" Grid.ColumnSpan="3" >
            <ContentControl Content="{Binding XmlContent}"  HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Border>-->

    </Grid>
</UserControl>
