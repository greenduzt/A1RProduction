<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:A1QSystem.Core" x:Class="A1QSystem.View.Machine.MachineMaintenanceDescriptionView" 
             mc:Ignorable="d" 
             d:DesignHeight="800" MinHeight="500" d:DesignWidth="900" MaxWidth="900">
    <UserControl.Resources>
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White" />
            <!--<Setter Property="IsEnabled" Value="{Binding IsProcessing}" />-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D1D1D1"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Core:IgnoreNewItemPlaceHolderConverter x:Key="ignoreNewItemPlaceHolderConverter"/>
    </UserControl.Resources>
    <Grid Background="White">
        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="Machine Maintenance Descriptions" TextAlignment="Center" FontWeight="Bold" FontSize="14" FontFamily="Verdana" Height="26" VerticalAlignment="Top" />
        <Button Content="CLOSE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,9,10" Command="{Binding CloseCommand}" 
			ToolTip="Close form" Height="25" VerticalAlignment="Bottom" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="UPDATE" HorizontalAlignment="Right" Width="73" HorizontalContentAlignment="Left"  Margin="0,0,82,10" Command="{Binding UpdateCommand}" 
			ToolTip="Update work descriptions" Height="25" VerticalAlignment="Bottom" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Machine Location" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="13,70,0,0" />
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="{Binding Location}" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="Normal" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="196,70,0,0" />
        <Grid Margin="11,92,14,0" Height="31" VerticalAlignment="Top">

            <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Maintenance Frequency" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="2,2,0,0" />
            <RadioButton Content="6 months" x:Name="rdbSInspection1_Copy" GroupName="DateRepeat" IsChecked="{Binding SixMonthChecked}" Height="15" Margin="443,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding RadioEnabled}"  />
            <RadioButton Content="Daily" x:Name="rdbSInspection1_Copy1" GroupName="DateRepeat" IsChecked="{Binding DailyChecked}" Height="15" Margin="185,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding RadioEnabled}" />
            <RadioButton Content="1 year" x:Name="rdbSInspection1_Copy4" GroupName="DateRepeat" IsChecked="{Binding OneYearChecked}" Height="15" Margin="537,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding RadioEnabled}" />
            <RadioButton Content="1 month" x:Name="rdbSInspection1_Copy7" GroupName="DateRepeat" IsChecked="{Binding OneMonthChecked}" Height="15" VerticalAlignment="Top" HorizontalAlignment="Left" Width="83" Margin="350,6,0,0" IsEnabled="{Binding RadioEnabled}" />
            <RadioButton Content="Weekly" x:Name="rdbSInspection1_Copy2" GroupName="DateRepeat" IsChecked="{Binding WeeklyChecked}" Height="15" Margin="266,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="73" IsEnabled="{Binding RadioEnabled}" />

        </Grid>

        <Border BorderBrush="#FFC5D0EE" Margin="10,149,10,41"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" >

            <DataGrid x:Name="dgQuoteDetails"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana"
				ItemsSource="{Binding MachineMaintenanceInfo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				AutoGenerateColumns="False" Grid.Column="0" Margin="2,2,2,2" Grid.ColumnSpan="2" Background="#e1e9f7" CanUserAddRows="False"   TabIndex="14"  >

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
                    <Core:BindingProxy x:Key="proxy" Data="{Binding}"/>
                </DataGrid.Resources>

                <DataGrid.SelectedItem>
                    <Binding Converter="{StaticResource ignoreNewItemPlaceHolderConverter}" Path="SelectedItem"/>
                </DataGrid.SelectedItem>

                <DataGrid.RowStyle>
                    <StaticResource ResourceKey="RowStyle"/>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <!--<DataGridTextColumn Header="Active" Binding="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>-->
                    <!--Code-->
                    <DataGridTextColumn Header="Code" Binding="{Binding SequenceStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" IsReadOnly="True">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="IsEnabled" Value="False" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--Description-->
                    <DataGridTextColumn Header="Work Description" Binding="{Binding MachineDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Medium" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--Repetition-->
                    <DataGridTemplateColumn Width="Auto" Visibility="{Binding Data.RepetitionVisiblity, Source={StaticResource proxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition  />
                                        <RowDefinition  />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="35" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Row="0" Grid.ColumnSpan="5" FontSize="14" FontWeight="Bold" Background="Transparent" HorizontalContentAlignment="Center" BorderBrush="Black" BorderThickness="0,0,0,1" Padding="0,0,0,3">Repetition</TextBox>

                                    <TextBox Grid.Row="1" Grid.Column="0" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center">Mon</TextBox>
                                    <TextBox Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center">Tue</TextBox>
                                    <TextBox Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center">Wed</TextBox>
                                    <TextBox Grid.Row="1" Grid.Column="3" BorderBrush="Black" BorderThickness="0,0,1,0" Width="35" TextAlignment="Center">Thus</TextBox>
                                    <TextBox Grid.Row="1" Grid.Column="4" BorderBrush="Black" BorderThickness="0,0,0,0" Width="35" TextAlignment="Center">Fri</TextBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                        <ColumnDefinition  />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox  Grid.Column="0" Margin="13,5,0,0" IsChecked="{Binding MonChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="1" Margin="13,5,0,0" IsChecked="{Binding TueChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="2" Margin="11,5,0,0" IsChecked="{Binding WedChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="3" Margin="10,5,0,0" IsChecked="{Binding ThusChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox  Grid.Column="4" Margin="8,5,0,0" IsChecked="{Binding FriChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>
                    <!--<DataGridCheckBoxColumn Width="auto" Header="Mon" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Tue" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Wed" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Thus" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Width="auto" Header="Fri" Binding="{Binding BoolProperty, UpdateSourceTrigger=PropertyChanged}" />-->
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Select Machine" LineHeight="17"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="14" Height="20" FontWeight="SemiBold" HorizontalAlignment="Left" Width="177" FontFamily="Arial" Margin="12,44,0,0" />
        <ComboBox x:Name="cmbCustomers_Copy1" 
        	TabIndex="2"  
            IsEnabled="False"
        	IsEditable="False"      
        	ItemsSource="{Binding Machines, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
        	DisplayMemberPath="MachineName"  
        	SelectedValuePath="MachineID"     
        	SelectedValue="{Binding SelectedMachineID, UpdateSourceTrigger=PropertyChanged}"      
        	Background="White" Foreground="Black" FontFamily="Verdana" Margin="195,43,0,0" Height="22" VerticalAlignment="Top" HorizontalAlignment="Left" Width="410" />
        <Button Content="ADD ITEM" HorizontalAlignment="Right" VerticalAlignment="Top" Width="85" Height="24" HorizontalContentAlignment="Left" Margin="0,120,95,0" Command="{Binding AddItemCommand}" ToolTip="Add new maintenance description" IsEnabled="{Binding AddItemEnabled}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding AddItemBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#808080"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="DELETE ITEM" HorizontalAlignment="Right" VerticalAlignment="Top" Width="85" Height="24" HorizontalContentAlignment="Left" Margin="0,120,10,0" Command="{Binding DeleteItem}"  ToolTip="Delete selected item from the list" IsEnabled="{Binding AddItemEnabled}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding AddItemBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#808080"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
