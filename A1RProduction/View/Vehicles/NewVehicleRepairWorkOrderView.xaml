<UserControl x:Class="A1QSystem.View.Vehicles.NewVehicleRepairWorkOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vc="clr-namespace:A1QSystem.Core" 
             mc:Ignorable="d" 
             d:DesignWidth="1050" d:DesignHeight="800">

    <UserControl.Resources>
        <vc:IgnoreNewItemPlaceHolderConverter x:Key="ignoreNewItemPlaceHolderConverter"/>
        <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White" />
            <!--<Setter Property="IsEnabled" Value="{Binding IsProcessing}" />-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D1D1D1"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="HomeMouseEnter">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HomeMouseLeave">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HomeTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.2"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="HomeMouseEnter" Storyboard="{StaticResource HomeMouseEnter}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="HomeTextBlock">
            <BeginStoryboard x:Name="HomeMouseLeave" Storyboard="{StaticResource HomeMouseLeave}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <TextBlock Background="#FF938F8F" Foreground="White" Padding="0,3,0,0" Margin="0,37,0,0" TextWrapping="Wrap" Text="New Vehicle Repair Work Order" TextAlignment="Center" FontWeight="Bold" FontSize="20" FontFamily="Arial" Height="32" VerticalAlignment="Top"/>
        <Label Content="{Binding Version}" Padding="7,3,0,0" FontSize="10" FontWeight="Bold" Margin="0,0,3,7" Foreground="White" Height="22" VerticalAlignment="Bottom" Grid.Column="0" Background="#FF6A6868" />
        <Grid Margin="8,7,8,0" Height="26" VerticalAlignment="Top">
            <TextBlock x:Name="HomeTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="88" FontSize="12" Text="DASHBOARD" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="0,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding NavHomeCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>

            <Label HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="17" Margin="104,0,0,0">
                <Label.Background>
                    <ImageBrush ImageSource="/A1QSystem;component/Images/NavArrow.png"/>
                </Label.Background>
            </Label>
            <TextBlock x:Name="NewQuoteTextBlock" Padding="1,1.5,0,1"  HorizontalAlignment="Left" Width="239" FontSize="13" Text="NEW VEHICLE REPAIR WORK ORDER" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="22" VerticalAlignment="Top" Background="#FFC33333" Foreground="White" FontWeight="Bold" Margin="127,2,0,0" />
            <!--<TextBlock x:Name="WorkOrdersTextBlock" Style="{StaticResource HoverEffect}" HorizontalAlignment="Left" Width="100" FontSize="12" Text="WORK ORDERS" TextWrapping="Wrap" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="18" VerticalAlignment="Top" Margin="126,2,0,0">
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding WorkOrdersCommand}" MouseAction="LeftClick" />
                </TextBlock.InputBindings>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>-->

            <Border BorderBrush="#FFC5D0EE" Margin="72,70,73,-87"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Height="43" VerticalAlignment="Top" Background="#e1e9f7" >
                <Grid Margin="-2,8,-2,-6">
                    <TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Search Vehicle"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="15" Height="24" FontWeight="Normal" HorizontalAlignment="Left" Width="123" FontFamily="Arial" Margin="10,0,0,0" />
                    <ComboBox x:Name="cmbCustomers_Copy" 
        			TabIndex="5"  
        			IsEditable="False"      
        			ItemsSource="{Binding Vehicles, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
        			DisplayMemberPath="VehicleString"  
        			SelectedValuePath="ID"     
        			SelectedValue="{Binding SelectedVehicle, UpdateSourceTrigger=PropertyChanged}"      FontSize="15" FontWeight="Normal"
        			Background="White" Foreground="Black" FontFamily="Verdana" Margin="169,0,0,0" Height="25" VerticalAlignment="Top" HorizontalAlignment="Left" Width="424" />
                    <!--<TextBlock VerticalAlignment="Top" Padding="0,2,0,0" Text="Urgency"  TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" FontSize="15" Height="24" FontWeight="Normal" HorizontalAlignment="Left" Width="128" FontFamily="Arial" Margin="10,27,0,0" />
                    <ComboBox 
                    	x:Name="cmbDispatchTime_Copy1"
                    	TabIndex="13"  
                    	IsEditable="False"   
                    	SelectedValuePath="Content"
                    	Background="White" Foreground="Black" FontFamily="Verdana" Margin="169,27,0,0" HorizontalAlignment="Left" Width="102" Height="25" VerticalAlignment="Top" SelectedValue="{Binding SelectedOrderType}" FontSize="15" FontWeight="Normal" >
                        <ComboBoxItem Content="Normal" />
                        <ComboBoxItem Content="Urgent" />
                    </ComboBox>-->

                </Grid>
            </Border>
        </Grid>
        <Border BorderBrush="#FFC5D0EE" Margin="80,328,80,65"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" >
            <TreeView x:Name="workItemsTree"  Margin="1,1,1,1" ItemsSource="{Binding VehicleWorkDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0">
                <!--<TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove"/>
                    </ContextMenu>
                </TreeView.ContextMenu>-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True" />
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="15" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding VehicleRepairDescription}">
                        <!--Teams-->
                        <StackPanel Orientation="Horizontal" Visibility="{Binding VehicleMaintenanceInfo.WorkItemVisible}">
                            <TextBlock Text="{Binding VehicleMaintenanceInfo.Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text=" - " />
                            <TextBlock Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <!--Repair Items-->
                        <HierarchicalDataTemplate.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Vehicleparts}">
                                <StackPanel>
                                    <TextBlock Visibility="{Binding RepairVisiblity}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat=" {0} - {1}">
                                                <Binding Path="StrSequenceNumber"/>
                                                <Binding Path="RepairDescription"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
        								<!--<TextBlock.ContextMenu>
                                            <ContextMenu>
                                                --><!--<MenuItem Header ="Remove repair item" 
                                                          Command="{Binding DataContext.RemoveRepairItemCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}" />--><!--
                                                <MenuItem Header ="Remove repair item" Click="MenuItem_Del" Background="Aqua" />

                                            </ContextMenu>
                                        </TextBlock.ContextMenu>-->
                                    </TextBlock>
                                    <!--<TextBlock Text="Remove">
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header ="Add SubNode" />
                                                <MenuItem Header ="Remove Node" />
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>-->
                                </StackPanel>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat=" {0} - {1}">
                                                    <Binding Path="StrSequenceNumber"/>
                                                    <Binding Path="PartCode"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <!--<DataGrid x:Name="dgQuoteDetails"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" 
        		ItemsSource="{Binding VehicleRepairWorkOrder.VehicleRepairDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" RowHeight="50"  
                      SelectedItem="{Binding SelectedItem,Converter={StaticResource ignoreNewItemPlaceHolderConverter}}" IsEnabled="{Binding DatagridEnabled}"
        		AutoGenerateColumns="False" Grid.Column="0" Margin="2,2,2,2" Grid.ColumnSpan="2" Background="#e1e9f7" CanUserAddRows="True"   TabIndex="14"  >

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <StaticResource ResourceKey="RowStyle"/>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    -->
            <!--Description-->
            <!--
                    <DataGridTextColumn Header="Item No" Width="Auto" Binding="{Binding SequenceNumber}" IsReadOnly="True" >
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Repair Description" Binding="{Binding RepairDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="FontSize" Value="15" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="AcceptsReturn" Value="true" />
                                <Setter Property="FontSize" Value="15" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>                  
                    <DataGridTemplateColumn Header="Parts Required" Width="Auto">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <CheckBox IsChecked="{Binding PartsOrdered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5" FontSize="12" Margin="0,6,0,0" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                        <TextBlock Text="Yes" Margin="0,-4,0,0" />
                                    </CheckBox>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>                   
                </DataGrid.Columns>
            </DataGrid>-->
        </Border>
        <!--<Button Content="BACK" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="64" Margin="0,0,211,33" Command="{Binding BackCommand}" />-->
        <!--<Button Content="CREATE" HorizontalAlignment="Right" ToolTip="Create repair work order" VerticalAlignment="Bottom" Width="64" Margin="0,0,81,33" Command="{Binding CompleteCommand}" />-->
        <Border BorderBrush="#FFC5D0EE" Margin="80,122,80,0"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Height="76" VerticalAlignment="Top" Background="#e1e9f7" >
            <Grid Margin="-2,5,-2,-3">
                <Button Content="ADD REPAIR" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Height="25" HorizontalContentAlignment="Left"  Margin="782,10,0,0" Command="{Binding AddToRepairCommand}" ToolTip="Add repair to work item" IsEnabled="{Binding AddRepairEnabled}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{Binding AddRepairButtonBackground}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF515151"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Label Content="Repair Description" HorizontalAlignment="Left" Height="29" Margin="6,6,0,0" VerticalAlignment="Top" Width="158" FontSize="15" RenderTransformOrigin="0.484,0.448" />
                <TextBox HorizontalAlignment="Left" Height="53" FontSize="15" Margin="169,10,0,0" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding RepairDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="608" IsEnabled="{Binding RepairDescriptionEnabled}" />
                <Label Content="Add Repair" HorizontalAlignment="Left" Height="26" Margin="6,-8,0,0" VerticalAlignment="Top" Width="148" FontSize="15" FontWeight="Bold" Padding="5,0"/>
            </Grid>
        </Border>
        <Border BorderBrush="#FFC5D0EE" Margin="80,201,80,0"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Height="122" VerticalAlignment="Top" Background="#e1e9f7" >
            <Grid Margin="-2,8,-2,-6">
                <Button Content="ADD PART" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Height="25" HorizontalContentAlignment="Left"  Margin="781,20,0,0" Command="{Binding AddToPartCommand}" ToolTip="Add vehicle part to repair item" IsEnabled="{Binding AddPartEnabled}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{Binding AddPartButtonBackGround}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF515151"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Label Content="Select Repair No" HorizontalAlignment="Left" Height="28" Margin="7,17,0,0" VerticalAlignment="Top" Width="157" FontSize="15" />
                <ComboBox x:Name="cmbItemCodes_Copy1" 
                	FontSize="15"
                	TabIndex="5"  
                	IsEditable="False"      
                	ItemsSource="{Binding VehicleRepairDescriptions, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
                	DisplayMemberPath="StrSequenceNumber"  
                	SelectedValuePath="StrSequenceNumber"     
                	SelectedValue="{Binding SelectedRepairNo, UpdateSourceTrigger=PropertyChanged}"      
                    IsEnabled="{Binding VehiclePartEnabled}"
                	Background="White" Foreground="Black" FontFamily="Verdana" Margin="169,19,0,0" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="95" />
                <Label Content="Part Code/Description" HorizontalAlignment="Left" Height="29" Margin="283,17,0,0" VerticalAlignment="Top" Width="158" FontSize="15" />
                <TextBox HorizontalAlignment="Left" IsEnabled="{Binding VehicleCodeEnabled}" Height="88" FontSize="15" Margin="441,19,0,0" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding PartCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="335"/>
                <Label Content="Add Vehicle Part" HorizontalAlignment="Left" Height="29" Margin="7,1,0,0" VerticalAlignment="Top" Width="148" FontSize="15" FontWeight="Bold" Padding="5,0"/>
            </Grid>
        </Border>
        <!--<Button Content="CLEAR" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="64" Margin="0,0,146,33" Command="{Binding ClearCommand}" />-->
        <Button Content="CREATE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="73" Height="25" HorizontalContentAlignment="Left" Margin="0,0,80,34" Command="{Binding CompleteCommand}"  ToolTip="Create repair work order">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding CrateBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="IsEnabled" Value="{Binding CreateButtonEnabled}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="CLEAR" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="73" Height="25" HorizontalContentAlignment="Left" Margin="0,0,153,34" Command="{Binding ClearCommand}"  ToolTip="Clear fields">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding ClearBackground}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="IsEnabled" Value="{Binding ClearEnabled}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="BACK" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="73" Height="25" HorizontalContentAlignment="Left" Margin="0,0,226,34" Command="{Binding BackCommand}"  ToolTip="Go back">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF787C7A"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF515151"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
